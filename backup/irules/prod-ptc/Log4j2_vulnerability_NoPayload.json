{
  "kind": "tm:ltm:rule:rulestate",
  "name": "Log4j2_vulnerability_NoPayload",
  "partition": "www-qa",
  "fullPath": "/www-qa/Log4j2_vulnerability_NoPayload",
  "generation": 1,
  "selfLink": "https://localhost/mgmt/tm/ltm/rule/~www-qa~Log4j2_vulnerability_NoPayload?ver=16.1.4.1",
  "apiAnonymous": "# F5 iRule for Mitigation of log4j Vulnerabilities\n# For additional information please see https://support.f5.com/csp/article/K59329043\n#\n#Version 2.5.1 - 2021-12-23 10:00 Eastern\n# - Removed payload checking for PIMCO Authoring sites MOID-361527 \n# Version 2.5 - 2021-12-17 04:15 Eastern\n# - New payload seen, regexp updated\n# Version 2.4 - 2021-12-16 18:55 Eastern\n# - Optimization of regexp\n# - Additional comments for clarity\n# Version 2.3 - 2021-12-16 03:40 Eastern\n# - Moved regexp to static variable\n# - Updated regexp to handle more encodings/evasions\n# - Added controls to logging levels - beware logging the exploit to a vulnerable log server\n# - Performance improvements\n# Version 2.2 - 2021-12-13 19:00 Eastern\n# - Added PUT method payload check\n# Version 2.1 - 2021-12-13 17:00 Eastern\n# - Revision to header & body regexp for new evasions\n# - Made default URI regexp less aggressive to avoid false positives - same as header & body now\n# - Added while loop limit\n# Version 2.0 - 2021-12-11 23:40 Eastern\n# - Handling nested URI encoding\n# - Improved matching\n# Version 1.0 - 2021-12-11 06:10 Eastern\n# - Initial release\n#\n\nwhen RULE_INIT {\n# To switch to a much more aggressive regexp uncomment the first line and comment the second.\n#    set static::log4j_regex {(?i)(\\$|\\\\+(0?44|([u0]00|x)24))'?(\\{|\\\\+(0?173|([u0]00|x)7b))'?}\n    set static::log4j_regex {(?i)(\\$|\\\\+(0?44|([u0]00|x)24))'?(\\{|\\\\+(0?173|([u0]00|x)7b))'?\\s*((j|b|\\\\+(0?1[5140]2|([u0]00|x)[64][a2]))|((\\$|\\\\+(0?44|([u0]00|x)24))?'?(\\{|\\\\+(0?173|([u0]00|x)7b))'?.+?'?(\\}|\\\\+(0?175|([u0]00|x)7d))'?))}\n}\n\nwhen HTTP_REQUEST {\n# set debugLogging to 0 not to log, 1 to log without exploit, 2 to log exploit\nset debugLogging 0\n\n# URI blocking\n# Be sure you're patched for CVE-2021-22991 or remove -normalized\n    set tmpUri [HTTP::uri -normalized]\n    set uri [URI::decode $tmpUri]\n    set loopLimit 5\n    set loopCount 1\n    while { $uri ne $tmpUri } {\n        if {$loopCount >= $loopLimit} {\n            if {$debugLogging == 1} {\n                # log local0. \"log4j_rce_detection drop on URI loop limit: $loopCount\"\n            }\n            if {$debugLogging == 2} {\n                # log local0. \"log4j_rce_detection drop on URI loop limit: $loopCount $uri\"\n            }\n            drop\n            event disable all\n            return\n        } else {\n            set tmpUri $uri\n            set uri [URI::decode $tmpUri]\n            incr loopCount\n        }\n    }\n\n    if {$uri matches_regex $static::log4j_regex} {\n        if {$debugLogging == 1} {\n            # log local0. \"log4j_rce_detection drop on URI\"\n        }\n        if {$debugLogging == 2} {\n            # log local0. \"log4j_rce_detection drop on URI: $uri\"\n        }\n        drop\n        event disable all\n        return\n    }\n\n# Header blocking\n    set tmpReq [HTTP::request]\n    set req [URI::decode $tmpReq]\n    set loopLimit 5\n    set loopCount 1\n    while { $req ne $tmpReq } {\n        if {$loopCount >= $loopLimit} {\n            if {$debugLogging == 1} {\n                # log local0. \"log4j_rce_detection drop on header loop limit: $loopCount\"\n            }\n            if {$debugLogging == 2} {\n                # log local0. \"log4j_rce_detection drop on header loop limit: $loopCount $req\"\n            }\n            drop\n            event disable all\n            return\n        } else {\n            set tmpReq $req\n            set req [URI::decode $tmpReq]\n            incr loopCount\n        }\n    }\n\n    if {$req matches_regex $static::log4j_regex} {\n        if {$debugLogging == 1} {\n            # log local0. \"log4j_rce_detection drop on header\"\n        }\n        if {$debugLogging == 2} {\n            # log local0. \"log4j_rce_detection drop on header: $req\"\n        }     \n        drop\n        event disable all\n        return\n    }\n\n}"
}